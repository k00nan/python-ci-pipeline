[tool.poetry]
name = "python-ci-pipeline"
version = "0.1.0"
description = ""
license = "MIT"
readme = "README.md"
repository = "https://github.com/k00nan/python-ci-pipeline"
authors = ["kenan <kenan.catovic@hm.edu>"]
packages = [
    {include = "python_ci_pipeline", from = "src"}
]


[tool.poetry.dependencies]
python = "^3.10"


[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
nox = "^2023.4.22"
isort = "^5.12.0"
mypy = "^1.3.0"
ruff = "^0.0.272"
pytest = "^7.3.2"
pytest-cov = "^4.1.0"


[tool.poetry.group.formatting.dependencies]
black = "^23.3.0"
isort = "^5.12.0"


[tool.poetry.group.static_type_checking.dependencies]
mypy = "^1.3.0"


[tool.poetry.group.linting.dependencies]
ruff = "^0.0.272"


[tool.poetry.group.testing.dependencies]
pytest = "^7.3.2"
pytest-cov = "^4.1.0"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
target-version = ["py310"]
line-length = 88
verbose = true


[tool.isort]
profile = "black"
verbose = true


[tool.mypy]
strict = true


[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true


[tool.ruff]
select = [
    "E",  # pycodestyle errors - pep8 style check
    "W",  # pycodestyle warnings - pep8 style check
    "F",  # pyflakes - only errors, no style check
    "S",  # flake8-bandit - static security check
    "C",  # flake8-comprehensions - checks list/set/dict comprehensions
    "B",  # flake8-bugbear - checks common bugs
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # mccabe code complexity analysis, not useful
    "S101",  # use of "assert" flagged by bandit, needed for tests
]
target-version = "py310"


[tool.pytest.ini_options]
minversion = 7.0
addopts = "--cov --ignore=noxfile.py"
testpaths = [
    "tests",
]

[tool.coverage.paths]
source = [
    "python_ci_pipeline",
]


[tool.coverage.run]
branch = true


[tool.coverage.report]
show_missing = true
fail_under = 100